<% case params[:domain]
	when "jp"
		create_category_property_string = "新規分類属性"
		modify_category_property_string = "分類属性編集"
		create_text_property_string = "新規文字属性"
		modify_text_property_string = "文字属性編集"
		create_time_property_string = "新規時間属性"
		modify_time_property_string = "時間属性編集"
		save_string = "保存"
		id_title_string = "保存用ID"
		id_prompt_string = "英数字と_のみ"
		name_title_string = "表示用名前"
		desc_title_string = "記述"
		default_title_string = "デフォルト値"
		dependency_dic = "依存辞書"
	when "cn"
		create_category_property_string = "新建分类属性"
		modify_category_property_string = "编辑分类属性"
		create_text_property_string = "新建文字属性"
		modify_text_property_string = "编辑文字属性"
		create_time_property_string = "新建时间属性"
		modify_time_property_string = "编辑时间属性"
		save_string = "保存"
		id_title_string = "保存用ID"
		id_prompt_string = "只能用字母、数字和下划线"
		name_title_string = "显示用名称"
		desc_title_string = "描述"
		default_title_string = "默认值"
		dependency_dic = "关联辞典"
	when "en"
		create_category_property_string = "Create Category Property"
		modify_category_property_string = "Modify Category Property"
		create_text_property_string = "Create Text Property"
		modify_text_property_string = "Modify Text Property"
		create_time_property_string = "Create Time Property"
		modify_time_property_string = "Modify Time Property"
		save_string = "Save"
		id_title_string = "ID for save"
		id_prompt_string = "only letter, number and underbar can be used"
		name_title_string = "Display Name"
		desc_title_string = "Description"
		default_title_string = "Default Value"
		dependency_dic = "Dictionary Dependency"
end %>
<% if not flash.now[:notice_err].blank? %>
	<div id="notice_err" ><%= flash.now[:notice_err] %></div>
<% end %>
<fieldset id="property_field" align="left" style="padding-top:10px; margin-bottom:30px; background: lightgrey;">
    <legend style="background: steelblue;">
		<% case @type_field
			when "category" %>
				<%= modify_property.blank? ? create_category_property_string : modify_category_property_string %>
			<% when "text" %>
				<%= modify_property.blank? ? create_text_property_string : modify_text_property_string %>
			<% when "time" %>
				<%= modify_property.blank? ? create_time_property_string : modify_time_property_string %>
		<% end %>
	</legend>
	<% form_remote_tag :url => { :action => "create_or_update_property" } do %>
		<table class="property_list">
			<thead>
				<tr>
					<th colspan=5 style="text-align:left;">
						<%= submit_tag save_string %>
						<%= hidden_field_tag :domain, params[:domain] %>
						<%= hidden_field_tag :type_field, @type_field %>
						<%= hidden_field_tag :section, @section %>
						<%= hidden_field_tag :id, modify_property.id unless modify_property.blank? %>
					</th>
				</tr>
				<tr>
					<th width="60px"><%= id_title_string %></th>
					<td width="400px">
						<% if modify_property.blank? %>
							<%= text_field_tag "string", id_prompt_string, :onclick=>"clear()", :class=>'text-field', :style=>"width:100%;" %>
						<% else %>
							<%= text_field_tag 'string', modify_property.property_string, :class=>'text-field', :style=>"width:100%;" %>
						<% end %>
					</td>
					<td width="60px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
					<th width="100px"><%= name_title_string %></th>
					<td width="400px">
						<% if modify_property.blank? %>
							<%= text_field_tag "human_name", nil, :class=>'text-field', :style=>"width:100%;" %>
						<% else %>
							<%= text_field_tag 'human_name', modify_property.human_name, :class=>'text-field', :style=>"width:100%;" %>
						<% end %>
					</td>
				<tr>
					<th><%= desc_title_string %></th>
					<td>
						<% if modify_property.blank? %>
							<%= text_field_tag "desc", nil, :class=>'text-field', :style=>"width:100%;" %>
						<% else %>
							<%= text_field_tag 'desc', modify_property.description, :class=>'text-field', :style=>"width:100%;" %>
						<% end %>
					</td>
					
					
					<% case @type_field
						when "category" %>
							<td></td>
							<th><%= dependency_dic %></th>
							<td>
								<% if modify_property.blank? %>
									<select id="dic_dependency" name="dic_dependency">
										<%= options_for_select(verify_domain(params[:domain])['Property'].constantize.find(:all, :conditions=>["property_string='dictionary' and property_cat_id > 0"]).map{|dict| [dict.tree_string, dict.property_cat_id]})%>
									</select>
								<% else %>
									<select id="dic_dependency" name="dic_dependency">
										<%= options_for_select(verify_domain(params[:domain])['Property'].constantize.find(:all, :conditions=>["property_string='dictionary' and property_cat_id > 0"]).map{|dict| [dict.tree_string, dict.property_cat_id]}, modify_property.dictionary_id)%>
									</select>
								<% end %>
							</td>
						<% when "text" %>
							<td></td>
							<th><%= default_title_string %></th>
							<td>
								<% if modify_property.blank? %>
									<%= text_field_tag "default_value", nil, :class=>'text-field', :style=>"width:100%;" %>
								<% else %>
									<%= text_field_tag 'default_value', modify_property.default_value, :class=>'text-field', :style=>"width:100%;" %>
								<% end %>
							</td>
						<% when "time" %>
							<td></td>
							<th><%= default_title_string %></th>
							<td>
								<% if modify_property.blank? %>
									<%= datetime_select("default_value", "section", {:use_month_numbers => true, :include_blank => true}) %>
								<% else %>
									<% if @time.blank? %>
										<%= datetime_select("default_value", "section", {:use_month_numbers => true, :include_blank => true}) %>
									<% else %>
										<%= select_datetime(@time, :use_month_numbers => true, :include_blank => true, :prefix=>"default_value") %>
									<% end %>
								<% end %>
							</td>
					<% end %>
				</tr>
				<% if ["text", "time"].include?(@type_field) %>
					<tr>
						<th><%= dependency_dic %></th>
						<td>
							<% if modify_property.blank? %>
								<select id="dic_dependency" name="dic_dependency">
									<%= options_for_select(verify_domain(params[:domain])['Property'].constantize.find(:all, :conditions=>["property_string='dictionary' and property_cat_id > 0"]).map{|dict| [dict.tree_string, dict.property_cat_id]})%>
								</select>
							<% else %>
								<select id="dic_dependency" name="dic_dependency">
									<%= options_for_select(verify_domain(params[:domain])['Property'].constantize.find(:all, :conditions=>["property_string='dictionary' and property_cat_id > 0"]).map{|dict| [dict.tree_string, dict.property_cat_id]}, modify_property.dictionary_id)%>
								</select>
							<% end %>
						</td>
					</tr>
				<% end %>
			</thead>
		</table>
	<% end %>
</fieldset>
<%= javascript_tag render(:update) { |page| page['property_field'].visual_effect :highlight } %>